import{f as Se,m as Ge}from"./chunk-F3VO2MTM.mjs";import"./chunk-TI4EEUUG.mjs";import"./chunk-6BY5RJGC.mjs";import{L as K,P as Ee,Q as we,R as Me,S as Le,T as Re,U as Ce,V as ve,X as Y,_ as Pe,b as N,fa as Oe}from"./chunk-NQURTBEV.mjs";import{a as f}from"./chunk-GTKDMUJJ.mjs";var de=function(){var r=f(function(H,g,d,x){for(d=d||{},x=H.length;x--;d[H[x]]=g);return d},"o"),c=[1,3],o=[1,6],u=[1,4],i=[1,5],s=[2,5],b=[1,12],p=[5,7,13,19,21,23,24,26,28,31,36,39,48],h=[7,13,19,21,23,24,26,28,31,36,39],m=[7,12,13,19,21,23,24,26,28,31,36,39],a=[7,13,48],L=[1,42],T=[1,41],l=[1,49],_=[7,13,29,32,37,45,48],y=[1,57],k=[1,59],E=[1,60],R=[1,61],v=[7,13,32,41,45,48],C=[7,13,32,34,37,41,45,48],j={trace:f(function(){},"trace"),yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,commitTags:35,MERGE:36,COMMIT_TYPE:37,commitType:38,COMMIT:39,commit_arg:40,COMMIT_MSG:41,NORMAL:42,REVERSE:43,HIGHLIGHT:44,COMMIT_TAG:45,EMPTYSTR:46,ID:47,";":48,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",36:"MERGE",37:"COMMIT_TYPE",39:"COMMIT",41:"COMMIT_MSG",42:"NORMAL",43:"REVERSE",44:"HIGHLIGHT",45:"COMMIT_TAG",46:"EMPTYSTR",47:"ID",48:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,4],[18,6],[18,6],[18,4],[18,6],[17,2],[17,4],[17,4],[17,3],[17,5],[17,5],[17,5],[17,6],[17,5],[17,6],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[16,2],[16,2],[16,3],[16,4],[16,4],[16,3],[16,4],[16,4],[16,5],[16,5],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,3],[16,4],[16,4],[16,5],[16,5],[16,5],[16,5],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[40,0],[40,1],[38,1],[38,1],[38,1],[35,2],[35,2],[35,3],[35,3],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:f(function(g,d,x,n,M,e,re){var t=e.length-1;switch(M){case 2:return e[t];case 3:return e[t-1];case 4:return n.setDirection(e[t-3]),e[t-1];break;case 6:n.setOptions(e[t-1]),this.$=e[t];break;case 7:e[t-1]+=e[t],this.$=e[t-1];break;case 9:this.$=[];break;case 10:e[t-1].push(e[t]),this.$=e[t-1];break;case 11:this.$=e[t-1];break;case 16:this.$=e[t].trim(),n.setAccTitle(this.$);break;case 17:case 18:this.$=e[t].trim(),n.setAccDescription(this.$);break;case 19:n.addSection(e[t].substr(8)),this.$=e[t].substr(8);break;case 21:n.checkout(e[t]);break;case 22:n.branch(e[t]);break;case 23:n.branch(e[t-2],e[t]);break;case 24:n.cherryPick(e[t],"",void 0);break;case 25:n.cherryPick(e[t-2],"",void 0,e[t]);break;case 26:n.cherryPick(e[t-1],"",e[t]);break;case 27:n.cherryPick(e[t-3],"",e[t],e[t-1]);break;case 28:n.cherryPick(e[t-3],"",e[t-2],e[t]);break;case 29:n.cherryPick(e[t],"",e[t-2]);break;case 30:n.cherryPick(e[t-2],"",e[t-4],e[t]);break;case 31:n.merge(e[t],"","",void 0);break;case 32:n.merge(e[t-2],e[t],"",void 0);break;case 33:n.merge(e[t-2],"",e[t],void 0);break;case 34:n.merge(e[t-1],"","",e[t]);break;case 35:n.merge(e[t-3],e[t],"",e[t-2]);break;case 36:n.merge(e[t-3],"",e[t],e[t-2]);break;case 37:n.merge(e[t-3],"",e[t-1],e[t]);break;case 38:n.merge(e[t-4],e[t-2],e[t],void 0);break;case 39:n.merge(e[t-3],e[t-1],"",e[t]);break;case 40:n.merge(e[t-4],e[t],e[t-2],void 0);break;case 41:n.merge(e[t-5],e[t-3],e[t-1],e[t]);break;case 42:n.merge(e[t-5],e[t],e[t-3],e[t-2]);break;case 43:n.merge(e[t-5],e[t-3],e[t],e[t-2]);break;case 44:n.merge(e[t-5],e[t-1],e[t-3],e[t]);break;case 45:n.merge(e[t-5],e[t],e[t-2],e[t-4]);break;case 46:n.merge(e[t-5],e[t-2],e[t],e[t-4]);break;case 47:n.commit(e[t]);break;case 48:n.commit("","",n.commitType.NORMAL,e[t]);break;case 49:n.commit("","",e[t],void 0);break;case 50:n.commit("","",e[t],e[t-2]);break;case 51:n.commit("","",e[t-1],e[t]);break;case 52:n.commit("",e[t],n.commitType.NORMAL,void 0);break;case 53:n.commit("",e[t-1],n.commitType.NORMAL,e[t]);break;case 54:n.commit("",e[t],n.commitType.NORMAL,e[t-2]);break;case 55:n.commit("",e[t-2],e[t],void 0);break;case 56:n.commit("",e[t],e[t-2],void 0);break;case 57:n.commit("",e[t-3],e[t-1],e[t]);break;case 58:n.commit("",e[t-3],e[t],e[t-2]);break;case 59:n.commit("",e[t-1],e[t-3],e[t]);break;case 60:n.commit("",e[t],e[t-3],e[t-2]);break;case 61:n.commit("",e[t],e[t-2],e[t-4]);break;case 62:n.commit("",e[t-2],e[t],e[t-4]);break;case 63:n.commit(e[t],"",n.commitType.NORMAL,void 0);break;case 64:n.commit(e[t],"",n.commitType.NORMAL,e[t-2]);break;case 65:n.commit(e[t-1],"",n.commitType.NORMAL,e[t]);break;case 66:n.commit(e[t-2],"",e[t],void 0);break;case 67:n.commit(e[t],"",e[t-2],void 0);break;case 68:n.commit(e[t],e[t-2],n.commitType.NORMAL,void 0);break;case 69:n.commit(e[t-2],e[t],n.commitType.NORMAL,void 0);break;case 70:n.commit(e[t-3],"",e[t-1],e[t]);break;case 71:n.commit(e[t-3],"",e[t],e[t-2]);break;case 72:n.commit(e[t-1],"",e[t-3],e[t]);break;case 73:n.commit(e[t],"",e[t-3],e[t-2]);break;case 74:n.commit(e[t],"",e[t-2],e[t-4]);break;case 75:n.commit(e[t-2],"",e[t],e[t-4]);break;case 76:n.commit(e[t-4],e[t],e[t-2],void 0);break;case 77:n.commit(e[t-4],e[t-2],e[t],void 0);break;case 78:n.commit(e[t-2],e[t],e[t-4],void 0);break;case 79:n.commit(e[t],e[t-2],e[t-4],void 0);break;case 80:n.commit(e[t],e[t-4],e[t-2],void 0);break;case 81:n.commit(e[t-2],e[t-4],e[t],void 0);break;case 82:n.commit(e[t-3],e[t],n.commitType.NORMAL,e[t-2]);break;case 83:n.commit(e[t-3],e[t-1],n.commitType.NORMAL,e[t]);break;case 84:n.commit(e[t-2],e[t],n.commitType.NORMAL,e[t-4]);break;case 85:n.commit(e[t],e[t-2],n.commitType.NORMAL,e[t-4]);break;case 86:n.commit(e[t],e[t-3],n.commitType.NORMAL,e[t-2]);break;case 87:n.commit(e[t-1],e[t-3],n.commitType.NORMAL,e[t]);break;case 88:n.commit(e[t-5],e[t-3],e[t-1],e[t]);break;case 89:n.commit(e[t-5],e[t-3],e[t],e[t-2]);break;case 90:n.commit(e[t-5],e[t-1],e[t-3],e[t]);break;case 91:n.commit(e[t-5],e[t],e[t-3],e[t-2]);break;case 92:n.commit(e[t-5],e[t-2],e[t],e[t-4]);break;case 93:n.commit(e[t-5],e[t],e[t-2],e[t-4]);break;case 94:n.commit(e[t-3],e[t-5],e[t-1],e[t]);break;case 95:n.commit(e[t-3],e[t-5],e[t],e[t-2]);break;case 96:n.commit(e[t-1],e[t-5],e[t-3],e[t]);break;case 97:n.commit(e[t],e[t-5],e[t-3],e[t-2]);break;case 98:n.commit(e[t-2],e[t-5],e[t],e[t-4]);break;case 99:n.commit(e[t],e[t-5],e[t-2],e[t-4]);break;case 100:n.commit(e[t],e[t-4],e[t-2],e[t-6]);break;case 101:n.commit(e[t-2],e[t-4],e[t],e[t-6]);break;case 102:n.commit(e[t],e[t-2],e[t-4],e[t-6]);break;case 103:n.commit(e[t-2],e[t],e[t-4],e[t-6]);break;case 104:n.commit(e[t-4],e[t-2],e[t],e[t-6]);break;case 105:n.commit(e[t-4],e[t],e[t-2],e[t-6]);break;case 106:n.commit(e[t-1],e[t-3],e[t-5],e[t]);break;case 107:n.commit(e[t],e[t-3],e[t-5],e[t-2]);break;case 108:n.commit(e[t-2],e[t],e[t-5],e[t-4]);break;case 109:n.commit(e[t],e[t-2],e[t-5],e[t-4]);break;case 110:n.commit(e[t-3],e[t-1],e[t-5],e[t]);break;case 111:n.commit(e[t-3],e[t],e[t-5],e[t-2]);break;case 112:this.$="";break;case 113:this.$=e[t];break;case 114:this.$=n.commitType.NORMAL;break;case 115:this.$=n.commitType.REVERSE;break;case 116:this.$=n.commitType.HIGHLIGHT;break;case 117:this.$=[e[t]];break;case 118:this.$=[""];break;case 119:e[t-2].push(e[t]),this.$=e[t-2];break;case 120:e[t-2].push(""),this.$=e[t-2];break}},"anonymous"),table:[{3:1,4:2,5:c,7:o,13:u,48:i},{1:[3]},{3:7,4:2,5:c,7:o,13:u,48:i},{6:8,7:s,8:[1,9],9:[1,10],10:11,13:b},r(p,[2,123]),r(p,[2,124]),r(p,[2,125]),{1:[2,1]},{7:[1,13]},{6:14,7:s,10:11,13:b},{8:[1,15]},r(h,[2,9],{11:16,12:[1,17]}),r(m,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:s,10:11,13:b},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],36:[1,33],39:[1,32]},r(m,[2,7]),{1:[2,3]},{7:[1,36]},r(h,[2,10]),{4:37,7:o,13:u,48:i},r(h,[2,12]),r(a,[2,13]),r(a,[2,14]),r(a,[2,15]),{20:[1,38]},{22:[1,39]},r(a,[2,18]),r(a,[2,19]),r(a,[2,20]),{27:40,33:L,47:T},r(a,[2,112],{40:43,35:44,32:[1,46],33:[1,48],37:[1,45],41:[1,47],45:l}),{27:50,33:L,47:T},{32:[1,51],35:52,45:l},{27:53,33:L,47:T},{1:[2,4]},r(h,[2,11]),r(a,[2,16]),r(a,[2,17]),r(a,[2,21]),r(_,[2,121]),r(_,[2,122]),r(a,[2,47]),r(a,[2,48],{32:[1,55],37:[1,54],41:[1,56],45:y}),{38:58,42:k,43:E,44:R},{33:[1,62]},{33:[1,63]},r(a,[2,113]),{33:[1,64],46:[1,65]},r(a,[2,31],{35:68,32:[1,66],37:[1,67],45:l}),{33:[1,69]},{32:[1,70],45:y},r(a,[2,22],{29:[1,71]}),{38:72,42:k,43:E,44:R},{33:[1,73]},{33:[1,74]},{33:[1,75],46:[1,76]},r(a,[2,49],{35:77,32:[1,78],41:[1,79],45:l}),r(v,[2,114]),r(v,[2,115]),r(v,[2,116]),r(a,[2,52],{35:80,37:[1,81],41:[1,82],45:l}),r(a,[2,63],{35:83,32:[1,85],37:[1,84],45:l}),r(C,[2,117]),r(C,[2,118]),{33:[1,86]},{38:87,42:k,43:E,44:R},r(a,[2,34],{32:[1,88],37:[1,89],45:y}),r(a,[2,24],{35:91,34:[1,90],45:l}),{33:[1,92]},{30:[1,93]},r(a,[2,50],{32:[1,94],41:[1,95]}),r(a,[2,54],{37:[1,96],41:[1,97]}),r(a,[2,64],{32:[1,99],37:[1,98]}),r(C,[2,119]),r(C,[2,120]),r(a,[2,51],{32:[1,100],41:[1,101],45:y}),{33:[1,102]},{33:[1,103]},r(a,[2,53],{37:[1,104],41:[1,105],45:y}),{38:106,42:k,43:E,44:R},{33:[1,107]},r(a,[2,65],{32:[1,109],37:[1,108],45:y}),{38:110,42:k,43:E,44:R},{33:[1,111]},r(a,[2,32],{35:113,37:[1,112],45:l}),r(a,[2,33],{35:114,32:[1,115],45:l}),{33:[1,116]},{38:117,42:k,43:E,44:R},{33:[1,118]},r(a,[2,26],{34:[1,119],45:y}),r(a,[2,29],{34:[1,120]}),r(a,[2,23]),{33:[1,121]},{33:[1,122]},{38:123,42:k,43:E,44:R},{33:[1,124]},{38:125,42:k,43:E,44:R},{33:[1,126]},{33:[1,127]},{33:[1,128]},r(a,[2,56],{35:129,41:[1,130],45:l}),r(a,[2,67],{35:131,32:[1,132],45:l}),{38:133,42:k,43:E,44:R},{33:[1,134]},r(a,[2,55],{35:135,41:[1,136],45:l}),r(a,[2,68],{35:138,37:[1,137],45:l}),{38:139,42:k,43:E,44:R},{33:[1,140]},r(a,[2,66],{35:141,32:[1,142],45:l}),r(a,[2,69],{35:144,37:[1,143],45:l}),{38:145,42:k,43:E,44:R},r(a,[2,39],{37:[1,146],45:y}),r(a,[2,37],{32:[1,147],45:y}),{33:[1,148]},r(a,[2,35],{37:[1,149]}),r(a,[2,36],{32:[1,150]}),r(a,[2,25],{35:151,45:l}),{33:[1,152]},{33:[1,153]},r(a,[2,61],{41:[1,154]}),r(a,[2,74],{32:[1,155]}),r(a,[2,62],{41:[1,156]}),r(a,[2,85],{37:[1,157]}),r(a,[2,75],{32:[1,158]}),r(a,[2,84],{37:[1,159]}),r(a,[2,60],{41:[1,160]}),r(a,[2,73],{32:[1,161]}),r(a,[2,59],{41:[1,162],45:y}),{33:[1,163]},r(a,[2,72],{32:[1,164],45:y}),{33:[1,165]},r(a,[2,58],{41:[1,166]}),r(a,[2,86],{37:[1,167]}),r(a,[2,57],{41:[1,168],45:y}),{33:[1,169]},{38:170,42:k,43:E,44:R},r(a,[2,87],{37:[1,171],45:y}),r(a,[2,71],{32:[1,172]}),r(a,[2,82],{37:[1,173]}),r(a,[2,70],{32:[1,174],45:y}),{33:[1,175]},{38:176,42:k,43:E,44:R},r(a,[2,83],{37:[1,177],45:y}),r(a,[2,38],{35:178,45:l}),{38:179,42:k,43:E,44:R},{33:[1,180]},r(a,[2,40],{35:181,45:l}),{38:182,42:k,43:E,44:R},{33:[1,183]},r(a,[2,27],{45:y}),r(a,[2,28]),r(a,[2,30]),{33:[1,184]},{33:[1,185]},{33:[1,186]},{38:187,42:k,43:E,44:R},{33:[1,188]},{38:189,42:k,43:E,44:R},{33:[1,190]},{33:[1,191]},{33:[1,192]},r(a,[2,79],{35:193,45:l}),{33:[1,194]},r(a,[2,78],{35:195,45:l}),{33:[1,196]},{38:197,42:k,43:E,44:R},{33:[1,198]},r(a,[2,80],{35:199,45:l}),r(a,[2,81],{35:200,45:l}),{38:201,42:k,43:E,44:R},{33:[1,202]},{38:203,42:k,43:E,44:R},{33:[1,204]},r(a,[2,76],{35:205,45:l}),r(a,[2,77],{35:206,45:l}),{38:207,42:k,43:E,44:R},r(a,[2,41],{45:y}),r(a,[2,43]),r(a,[2,42]),r(a,[2,44],{45:y}),r(a,[2,46]),r(a,[2,45]),r(a,[2,102]),r(a,[2,103]),r(a,[2,100]),r(a,[2,101]),r(a,[2,105]),r(a,[2,104]),r(a,[2,109]),r(a,[2,108]),r(a,[2,107]),r(a,[2,106],{45:y}),r(a,[2,111]),r(a,[2,110],{45:y}),r(a,[2,99]),r(a,[2,98]),r(a,[2,97]),r(a,[2,96],{45:y}),r(a,[2,94],{45:y}),r(a,[2,95]),r(a,[2,93]),r(a,[2,92]),r(a,[2,91]),r(a,[2,90],{45:y}),r(a,[2,88],{45:y}),r(a,[2,89])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:f(function(g,d){if(d.recoverable)this.trace(g);else{var x=new Error(g);throw x.hash=d,x}},"parseError"),parse:f(function(g){var d=this,x=[0],n=[],M=[null],e=[],re=this.table,t="",ne=0,ke=0,ye=0,We=2,_e=1,Je=e.slice.call(arguments,1),S=Object.create(this.lexer),Q={yy:{}};for(var fe in this.yy)Object.prototype.hasOwnProperty.call(this.yy,fe)&&(Q.yy[fe]=this.yy[fe]);S.setInput(g,Q.yy),Q.yy.lexer=S,Q.yy.parser=this,typeof S.yylloc>"u"&&(S.yylloc={});var ue=S.yylloc;e.push(ue);var Qe=S.options&&S.options.ranges;typeof Q.yy.parseError=="function"?this.parseError=Q.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function Et(q){x.length=x.length-2*q,M.length=M.length-q,e.length=e.length-q}f(Et,"popStack");function Xe(){var q;return q=n.pop()||S.lex()||_e,typeof q!="number"&&(q instanceof Array&&(n=q,q=n.pop()),q=d.symbols_[q]||q),q}f(Xe,"lex");for(var V,pe,X,F,wt,ge,ee={},ce,W,Te,oe;;){if(X=x[x.length-1],this.defaultActions[X]?F=this.defaultActions[X]:((V===null||typeof V>"u")&&(V=Xe()),F=re[X]&&re[X][V]),typeof F>"u"||!F.length||!F[0]){var be="";oe=[];for(ce in re[X])this.terminals_[ce]&&ce>We&&oe.push("'"+this.terminals_[ce]+"'");S.showPosition?be="Parse error on line "+(ne+1)+`:
`+S.showPosition()+`
Expecting `+oe.join(", ")+", got '"+(this.terminals_[V]||V)+"'":be="Parse error on line "+(ne+1)+": Unexpected "+(V==_e?"end of input":"'"+(this.terminals_[V]||V)+"'"),this.parseError(be,{text:S.match,token:this.terminals_[V]||V,line:S.yylineno,loc:ue,expected:oe})}if(F[0]instanceof Array&&F.length>1)throw new Error("Parse Error: multiple actions possible at state: "+X+", token: "+V);switch(F[0]){case 1:x.push(V),M.push(S.yytext),e.push(S.yylloc),x.push(F[1]),V=null,pe?(V=pe,pe=null):(ke=S.yyleng,t=S.yytext,ne=S.yylineno,ue=S.yylloc,ye>0&&ye--);break;case 2:if(W=this.productions_[F[1]][1],ee.$=M[M.length-W],ee._$={first_line:e[e.length-(W||1)].first_line,last_line:e[e.length-1].last_line,first_column:e[e.length-(W||1)].first_column,last_column:e[e.length-1].last_column},Qe&&(ee._$.range=[e[e.length-(W||1)].range[0],e[e.length-1].range[1]]),ge=this.performAction.apply(ee,[t,ke,ne,Q.yy,F[1],M,e].concat(Je)),typeof ge<"u")return ge;W&&(x=x.slice(0,-1*W*2),M=M.slice(0,-1*W),e=e.slice(0,-1*W)),x.push(this.productions_[F[1]][0]),M.push(ee.$),e.push(ee._$),Te=re[x[x.length-2]][x[x.length-1]],x.push(Te);break;case 3:return!0}}return!0},"parse")},z=function(){var H={EOF:1,parseError:f(function(d,x){if(this.yy.parser)this.yy.parser.parseError(d,x);else throw new Error(d)},"parseError"),setInput:f(function(g,d){return this.yy=d||this.yy||{},this._input=g,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},"setInput"),input:f(function(){var g=this._input[0];this.yytext+=g,this.yyleng++,this.offset++,this.match+=g,this.matched+=g;var d=g.match(/(?:\r\n?|\n).*/g);return d?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),g},"input"),unput:f(function(g){var d=g.length,x=g.split(/(?:\r\n?|\n)/g);this._input=g+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-d),this.offset-=d;var n=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),x.length-1&&(this.yylineno-=x.length-1);var M=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:x?(x.length===n.length?this.yylloc.first_column:0)+n[n.length-x.length].length-x[0].length:this.yylloc.first_column-d},this.options.ranges&&(this.yylloc.range=[M[0],M[0]+this.yyleng-d]),this.yyleng=this.yytext.length,this},"unput"),more:f(function(){return this._more=!0,this},"more"),reject:f(function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},"reject"),less:f(function(g){this.unput(this.match.slice(g))},"less"),pastInput:f(function(){var g=this.matched.substr(0,this.matched.length-this.match.length);return(g.length>20?"...":"")+g.substr(-20).replace(/\n/g,"")},"pastInput"),upcomingInput:f(function(){var g=this.match;return g.length<20&&(g+=this._input.substr(0,20-g.length)),(g.substr(0,20)+(g.length>20?"...":"")).replace(/\n/g,"")},"upcomingInput"),showPosition:f(function(){var g=this.pastInput(),d=new Array(g.length+1).join("-");return g+this.upcomingInput()+`
`+d+"^"},"showPosition"),test_match:f(function(g,d){var x,n,M;if(this.options.backtrack_lexer&&(M={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(M.yylloc.range=this.yylloc.range.slice(0))),n=g[0].match(/(?:\r\n?|\n).*/g),n&&(this.yylineno+=n.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:n?n[n.length-1].length-n[n.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+g[0].length},this.yytext+=g[0],this.match+=g[0],this.matches=g,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(g[0].length),this.matched+=g[0],x=this.performAction.call(this,this.yy,this,d,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),x)return x;if(this._backtrack){for(var e in M)this[e]=M[e];return!1}return!1},"test_match"),next:f(function(){if(this.done)return this.EOF;this._input||(this.done=!0);var g,d,x,n;this._more||(this.yytext="",this.match="");for(var M=this._currentRules(),e=0;e<M.length;e++)if(x=this._input.match(this.rules[M[e]]),x&&(!d||x[0].length>d[0].length)){if(d=x,n=e,this.options.backtrack_lexer){if(g=this.test_match(x,M[e]),g!==!1)return g;if(this._backtrack){d=!1;continue}else return!1}else if(!this.options.flex)break}return d?(g=this.test_match(d,M[n]),g!==!1?g:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},"next"),lex:f(function(){var d=this.next();return d||this.lex()},"lex"),begin:f(function(d){this.conditionStack.push(d)},"begin"),popState:f(function(){var d=this.conditionStack.length-1;return d>0?this.conditionStack.pop():this.conditionStack[0]},"popState"),_currentRules:f(function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},"_currentRules"),topState:f(function(d){return d=this.conditionStack.length-1-Math.abs(d||0),d>=0?this.conditionStack[d]:"INITIAL"},"topState"),pushState:f(function(d){this.begin(d)},"pushState"),stateStackSize:f(function(){return this.conditionStack.length},"stateStackSize"),options:{"case-insensitive":!0},performAction:f(function(d,x,n,M){var e=M;switch(n){case 0:return this.begin("acc_title"),19;break;case 1:return this.popState(),"acc_title_value";break;case 2:return this.begin("acc_descr"),21;break;case 3:return this.popState(),"acc_descr_value";break;case 4:this.begin("acc_descr_multiline");break;case 5:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:break;case 9:break;case 10:return 5;case 11:return 39;case 12:return 32;case 13:return 37;case 14:return 41;case 15:return 42;case 16:return 43;case 17:return 44;case 18:return 45;case 19:return 28;case 20:return 29;case 21:return 36;case 22:return 31;case 23:return 34;case 24:return 26;case 25:return 9;case 26:return 9;case 27:return 9;case 28:return 8;case 29:return"CARET";case 30:this.begin("options");break;case 31:this.popState();break;case 32:return 12;case 33:return 46;case 34:this.begin("string");break;case 35:this.popState();break;case 36:return 33;case 37:return 30;case 38:return 47;case 39:return 7;case 40:break}},"anonymous"),rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:\b(checkout|switch)(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?:BT\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[31,32],inclusive:!1},string:{rules:[35,36],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,38,39,40],inclusive:!0}}};return H}();j.lexer=z;function U(){this.yy={}}return f(U,"Parser"),U.prototype=j,j.Parser=U,new U}();de.parser=de;var Ie=de;var{mainBranchName:le,mainBranchOrder:Ze}=Y().gitGraph,I=new Map,D=null,ie=new Map;ie.set(le,{name:le,order:Ze});var P=new Map;P.set(le,D);var G=le,Be="LR",Z=0;function xe(){return Se({length:7})}f(xe,"getId");function $e(r,c){let o=Object.create(null);return r.reduce((u,i)=>{let s=c(i);return o[s]||(o[s]=!0,u.push(i)),u},[])}f($e,"uniqBy");var et=f(function(r){Be=r},"setDirection"),Ne={},tt=f(function(r){N.debug("options str",r),r=r?.trim(),r=r||"{}";try{Ne=JSON.parse(r)}catch(c){N.error("error while parsing gitGraph options",c.message)}},"setOptions"),rt=f(function(){return Ne},"getOptions"),it=f(function(r,c,o,u){N.debug("Entering commit:",r,c,o,u);let i=Y();c=K.sanitizeText(c,i),r=K.sanitizeText(r,i),u=u?.map(b=>K.sanitizeText(b,i));let s={id:c||Z+"-"+xe(),message:r,seq:Z++,type:o||te.NORMAL,tags:u??[],parents:D==null?[]:[D.id],branch:G};D=s,I.set(s.id,s),P.set(G,s.id),N.debug("in pushCommit "+s.id)},"commit"),st=f(function(r,c){if(r=K.sanitizeText(r,Y()),!P.has(r))P.set(r,D!=null?D.id:null),ie.set(r,{name:r,order:c?parseInt(c,10):null}),He(r),N.debug("in createBranch");else{let o=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+r+'")');throw o.hash={text:"branch "+r,token:"branch "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+r+'"']},o}},"branch"),at=f(function(r,c,o,u){let i=Y();r=K.sanitizeText(r,i),c=K.sanitizeText(c,i);let s=I.get(P.get(G)),b=I.get(P.get(r));if(G===r){let h=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},h}else if(s===void 0||!s){let h=new Error('Incorrect usage of "merge". Current branch ('+G+")has no commits");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},h}else if(P.has(r)){if(b===void 0||!b){let h=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") has no commits");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},h}else if(s===b){let h=new Error('Incorrect usage of "merge". Both branches have same head');throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},h}else if(c&&I.has(c)){let h=new Error('Incorrect usage of "merge". Commit with id:'+c+" already exists, use different custom Id");throw h.hash={text:"merge "+r+c+o+u?.join(","),token:"merge "+r+c+o+u?.join(","),line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:[`merge ${r} ${c}_UNIQUE ${o} ${u?.join(",")}`]},h}}else{let h=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") does not exist");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+r]},h}let p={id:c||Z+"-"+xe(),message:"merged branch "+r+" into "+G,seq:Z++,parents:[D==null?null:D.id,P.get(r)],branch:G,type:te.MERGE,customType:o,customId:!!c,tags:u||[]};D=p,I.set(p.id,p),P.set(G,p.id),N.debug(P),N.debug("in mergeBranch")},"merge"),nt=f(function(r,c,o,u){N.debug("Entering cherryPick:",r,c,o);let i=Y();if(r=K.sanitizeText(r,i),c=K.sanitizeText(c,i),o=o?.map(p=>K.sanitizeText(p,i)),u=K.sanitizeText(u,i),!r||!I.has(r)){let p=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw p.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},p}let s=I.get(r),b=s.branch;if(u&&!(Array.isArray(s.parents)&&s.parents.includes(u)))throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.");if(s.type===te.MERGE&&!u)throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.");if(!c||!I.has(c)){if(b===G){let m=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw m.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},m}let p=I.get(P.get(G));if(p===void 0||!p){let m=new Error('Incorrect usage of "cherry-pick". Current branch ('+G+")has no commits");throw m.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},m}let h={id:Z+"-"+xe(),message:"cherry-picked "+s+" into "+G,seq:Z++,parents:[D==null?null:D.id,s.id],branch:G,type:te.CHERRY_PICK,tags:o?o.filter(Boolean):[`cherry-pick:${s.id}${s.type===te.MERGE?`|parent:${u}`:""}`]};D=h,I.set(h.id,h),P.set(G,h.id),N.debug(P),N.debug("in cherryPick")}},"cherryPick"),He=f(function(r){if(r=K.sanitizeText(r,Y()),P.has(r)){G=r;let c=P.get(G);D=I.get(c)}else{let c=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+r+'")');throw c.hash={text:"checkout "+r,token:"checkout "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+r+'"']},c}},"checkout");function Ae(r,c,o){let u=r.indexOf(c);u===-1?r.push(o):r.splice(u,1,o)}f(Ae,"upsert");function Ve(r){let c=r.reduce((i,s)=>i.seq>s.seq?i:s,r[0]),o="";r.forEach(function(i){i===c?o+="	*":o+="	|"});let u=[o,c.id,c.seq];for(let i in P)P.get(i)===c.id&&u.push(i);if(N.debug(u.join(" ")),c.parents&&c.parents.length==2){let i=I.get(c.parents[0]);Ae(r,c,i),r.push(I.get(c.parents[1]))}else{if(c.parents.length==0)return;{let i=I.get(c.parents);Ae(r,c,i)}}r=$e(r,i=>i.id),Ve(r)}f(Ve,"prettyPrintCommitHistory");var ct=f(function(){N.debug(I);let r=De()[0];Ve([r])},"prettyPrint"),ot=f(function(){I=new Map,D=null;let{mainBranchName:r,mainBranchOrder:c}=Y().gitGraph;P=new Map,P.set(r,null),ie=new Map,ie.set(r,{name:r,order:c}),G=r,Z=0,Ee()},"clear"),lt=f(function(){return[...ie.values()].map((c,o)=>c.order!==null?c:{...c,order:parseFloat(`0.${o}`,10)}).sort((c,o)=>c.order-o.order).map(({name:c})=>({name:c}))},"getBranchesAsObjArray"),ht=f(function(){return P},"getBranches"),mt=f(function(){return I},"getCommits"),De=f(function(){let r=[...I.values()];return r.forEach(function(c){N.debug(c.id)}),r.sort((c,o)=>c.seq-o.seq),r},"getCommitsArray"),ft=f(function(){return G},"getCurrentBranch"),ut=f(function(){return Be},"getDirection"),pt=f(function(){return D},"getHead"),te={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},ze={getConfig:f(()=>Y().gitGraph,"getConfig"),setDirection:et,setOptions:tt,getOptions:rt,commit:it,branch:st,merge:at,cherryPick:nt,checkout:He,prettyPrint:ct,clear:ot,getBranchesAsObjArray:lt,getBranches:ht,getCommits:mt,getCommitsArray:De,getCurrentBranch:ft,getDirection:ut,getHead:pt,setAccTitle:we,getAccTitle:Me,getAccDescription:Re,setAccDescription:Le,setDiagramTitle:Ce,getDiagramTitle:ve,commitType:te};var se=new Map,O={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},$=8,A={},B={},he=[],J=0,w="LR",me=30,gt=f(()=>{A=new Map,B=new Map,se=new Map,J=0,he=[],w="LR"},"clear"),Ye=f(r=>{let c=document.createElementNS("http://www.w3.org/2000/svg","text"),o=[];typeof r=="string"?o=r.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(r)?o=r:o=[];for(let u of o){let i=document.createElementNS("http://www.w3.org/2000/svg","tspan");i.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),i.setAttribute("dy","1em"),i.setAttribute("x","0"),i.setAttribute("class","row"),i.textContent=u.trim(),c.appendChild(i)}return c},"drawText"),je=f(r=>{let c="",o=0;return r.forEach(u=>{let i=w==="TB"||w==="BT"?B.get(u).y:B.get(u).x;i>=o&&(c=u,o=i)}),c||void 0},"findClosestParent"),Fe=f(r=>{let c="",o=1/0;return r.forEach(u=>{let i=B.get(u).y;i<=o&&(c=u,o=i)}),c||void 0},"findClosestParentBT"),bt=f((r,c,o,u,i)=>{let s=o,b=o,p=[];r.forEach(h=>{let m=c.get(h);if(m.parents.length){let T=je(m.parents);s=B.get(T).y+u,s>=b&&(b=s)}else p.push(m);let a=A.get(m.branch).pos,L=s+i;B.set(m.id,{x:a,y:L})}),s=b,p.forEach(h=>{let a=s+o,L=A.get(h.branch).pos;B.set(h.id,{x:L,y:a})}),r.forEach(h=>{let m=c.get(h);if(m.parents.length){let a=Fe(m.parents);s=B.get(a).y-u,s<=b&&(b=s);let L=A.get(m.branch).pos,T=s-i;B.set(m.id,{x:L,y:T})}})},"setParallelBTPos"),qe=f((r,c,o)=>{let u=Y().gitGraph,i=r.append("g").attr("class","commit-bullets"),s=r.append("g").attr("class","commit-labels"),b=0;(w==="TB"||w==="BT")&&(b=me);let p=[...c.keys()],h=u.parallelCommits,m=10,a=40,L=w!=="BT"||w==="BT"&&h?p.sort((T,l)=>c.get(T).seq-c.get(l).seq):p.sort((T,l)=>c.get(T).seq-c.get(l).seq).reverse();w==="BT"&&h&&(bt(L,c,b,a,m),L=L.reverse()),L.forEach(T=>{let l=c.get(T);if(h)if(l.parents.length){let E=w==="BT"?Fe(l.parents):je(l.parents);w==="TB"?b=B.get(E).y+a:w==="BT"?b=B.get(T).y-a:b=B.get(E).x+a}else w==="TB"?b=me:w==="BT"?b=B.get(T).y-a:b=0;let _=w==="BT"&&h?b:b+m,y=w==="TB"||w==="BT"?_:A.get(l.branch).pos,k=w==="TB"||w==="BT"?A.get(l.branch).pos:_;if(o){let E,R=l.customType!==void 0&&l.customType!==""?l.customType:l.type;switch(R){case O.NORMAL:E="commit-normal";break;case O.REVERSE:E="commit-reverse";break;case O.HIGHLIGHT:E="commit-highlight";break;case O.MERGE:E="commit-merge";break;case O.CHERRY_PICK:E="commit-cherry-pick";break;default:E="commit-normal"}if(R===O.HIGHLIGHT){let v=i.append("rect");v.attr("x",k-10),v.attr("y",y-10),v.attr("height",20),v.attr("width",20),v.attr("class",`commit ${l.id} commit-highlight${A.get(l.branch).index%$} ${E}-outer`),i.append("rect").attr("x",k-6).attr("y",y-6).attr("height",12).attr("width",12).attr("class",`commit ${l.id} commit${A.get(l.branch).index%$} ${E}-inner`)}else if(R===O.CHERRY_PICK)i.append("circle").attr("cx",k).attr("cy",y).attr("r",10).attr("class",`commit ${l.id} ${E}`),i.append("circle").attr("cx",k-3).attr("cy",y+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${l.id} ${E}`),i.append("circle").attr("cx",k+3).attr("cy",y+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${l.id} ${E}`),i.append("line").attr("x1",k+3).attr("y1",y+1).attr("x2",k).attr("y2",y-5).attr("stroke","#fff").attr("class",`commit ${l.id} ${E}`),i.append("line").attr("x1",k-3).attr("y1",y+1).attr("x2",k).attr("y2",y-5).attr("stroke","#fff").attr("class",`commit ${l.id} ${E}`);else{let v=i.append("circle");if(v.attr("cx",k),v.attr("cy",y),v.attr("r",l.type===O.MERGE?9:10),v.attr("class",`commit ${l.id} commit${A.get(l.branch).index%$}`),R===O.MERGE){let C=i.append("circle");C.attr("cx",k),C.attr("cy",y),C.attr("r",6),C.attr("class",`commit ${E} ${l.id} commit${A.get(l.branch).index%$}`)}R===O.REVERSE&&i.append("path").attr("d",`M ${k-5},${y-5}L${k+5},${y+5}M${k-5},${y+5}L${k+5},${y-5}`).attr("class",`commit ${E} ${l.id} commit${A.get(l.branch).index%$}`)}}if(w==="TB"||w==="BT"?B.set(l.id,{x:k,y:_}):B.set(l.id,{x:_,y}),o){if(l.type!==O.CHERRY_PICK&&(l.customId&&l.type===O.MERGE||l.type!==O.MERGE)&&u.showCommitLabel){let v=s.append("g"),C=v.insert("rect").attr("class","commit-label-bkg"),j=v.append("text").attr("x",b).attr("y",y+25).attr("class","commit-label").text(l.id),z=j.node().getBBox();if(C.attr("x",_-z.width/2-2).attr("y",y+13.5).attr("width",z.width+2*2).attr("height",z.height+2*2),w==="TB"||w==="BT"?(C.attr("x",k-(z.width+4*4+5)).attr("y",y-12),j.attr("x",k-(z.width+4*4)).attr("y",y+z.height-12)):j.attr("x",_-z.width/2),u.rotateCommitLabel)if(w==="TB"||w==="BT")j.attr("transform","rotate(-45, "+k+", "+y+")"),C.attr("transform","rotate(-45, "+k+", "+y+")");else{let U=-7.5-(z.width+10)/25*9.5,H=10+z.width/25*8.5;v.attr("transform","translate("+U+", "+H+") rotate(-45, "+b+", "+y+")")}}if(l.tags.length>0){let v=0,C=0,j=0,z=[];for(let U of l.tags.reverse()){let H=s.insert("polygon"),g=s.append("circle"),d=s.append("text").attr("y",y-16-v).attr("class","tag-label").text(U),x=d.node().getBBox();C=Math.max(C,x.width),j=Math.max(j,x.height),d.attr("x",_-x.width/2),z.push({tag:d,hole:g,rect:H,yOffset:v}),v+=20}for(let{tag:U,hole:H,rect:g,yOffset:d}of z){let x=j/2,n=y-19.2-d;if(g.attr("class","tag-label-bkg").attr("points",`
            ${b-C/2-4/2},${n+2}
            ${b-C/2-4/2},${n-2}
            ${_-C/2-4},${n-x-2}
            ${_+C/2+4},${n-x-2}
            ${_+C/2+4},${n+x+2}
            ${_-C/2-4},${n+x+2}`),H.attr("cy",n).attr("cx",b-C/2+4/2).attr("r",1.5).attr("class","tag-hole"),w==="TB"||w==="BT"){let M=b+d;g.attr("class","tag-label-bkg").attr("points",`
              ${k},${M+2}
              ${k},${M-2}
              ${k+m},${M-x-2}
              ${k+m+C+4},${M-x-2}
              ${k+m+C+4},${M+x+2}
              ${k+m},${M+x+2}`).attr("transform","translate(12,12) rotate(45, "+k+","+b+")"),H.attr("cx",k+4/2).attr("cy",M).attr("transform","translate(12,12) rotate(45, "+k+","+b+")"),U.attr("x",k+5).attr("y",M+3).attr("transform","translate(14,14) rotate(45, "+k+","+b+")")}}}}b=w==="BT"&&h?b+a:b+a+m,b>J&&(J=b)})},"drawCommits"),dt=f((r,c,o,u,i)=>{let b=(w==="TB"||w==="BT"?o.x<u.x:o.y<u.y)?c.branch:r.branch,p=f(m=>m.branch===b,"isOnBranchToGetCurve"),h=f(m=>m.seq>r.seq&&m.seq<c.seq,"isBetweenCommits");return[...i.values()].some(m=>h(m)&&p(m))},"shouldRerouteArrow"),ae=f((r,c,o=0)=>{let u=r+Math.abs(r-c)/2;if(o>5)return u;if(he.every(b=>Math.abs(b-u)>=10))return he.push(u),u;let s=Math.abs(r-c);return ae(r,c-s/5,o+1)},"findLane"),xt=f((r,c,o,u)=>{let i=B.get(c.id),s=B.get(o.id),b=dt(c,o,i,s,u),p="",h="",m=0,a=0,L=A.get(o.branch).index;o.type===O.MERGE&&c.id!==o.parents[0]&&(L=A.get(c.branch).index);let T;if(b){p="A 10 10, 0, 0, 0,",h="A 10 10, 0, 0, 1,",m=10,a=10;let l=i.y<s.y?ae(i.y,s.y):ae(s.y,i.y),_=i.x<s.x?ae(i.x,s.x):ae(s.x,i.x);w==="TB"?i.x<s.x?T=`M ${i.x} ${i.y} L ${_-m} ${i.y} ${h} ${_} ${i.y+a} L ${_} ${s.y-m} ${p} ${_+a} ${s.y} L ${s.x} ${s.y}`:(L=A.get(c.branch).index,T=`M ${i.x} ${i.y} L ${_+m} ${i.y} ${p} ${_} ${i.y+a} L ${_} ${s.y-m} ${h} ${_-a} ${s.y} L ${s.x} ${s.y}`):w==="BT"?i.x<s.x?T=`M ${i.x} ${i.y} L ${_-m} ${i.y} ${p} ${_} ${i.y-a} L ${_} ${s.y+m} ${h} ${_+a} ${s.y} L ${s.x} ${s.y}`:(L=A.get(c.branch).index,T=`M ${i.x} ${i.y} L ${_+m} ${i.y} ${h} ${_} ${i.y-a} L ${_} ${s.y+m} ${p} ${_-a} ${s.y} L ${s.x} ${s.y}`):i.y<s.y?T=`M ${i.x} ${i.y} L ${i.x} ${l-m} ${p} ${i.x+a} ${l} L ${s.x-m} ${l} ${h} ${s.x} ${l+a} L ${s.x} ${s.y}`:(L=A.get(c.branch).index,T=`M ${i.x} ${i.y} L ${i.x} ${l+m} ${h} ${i.x+a} ${l} L ${s.x-m} ${l} ${p} ${s.x} ${l-a} L ${s.x} ${s.y}`)}else p="A 20 20, 0, 0, 0,",h="A 20 20, 0, 0, 1,",m=20,a=20,w==="TB"?(i.x<s.x&&(o.type===O.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${i.x} ${s.y-m} ${p} ${i.x+a} ${s.y} L ${s.x} ${s.y}`:T=`M ${i.x} ${i.y} L ${s.x-m} ${i.y} ${h} ${s.x} ${i.y+a} L ${s.x} ${s.y}`),i.x>s.x&&(p="A 20 20, 0, 0, 0,",h="A 20 20, 0, 0, 1,",m=20,a=20,o.type===O.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${i.x} ${s.y-m} ${h} ${i.x-a} ${s.y} L ${s.x} ${s.y}`:T=`M ${i.x} ${i.y} L ${s.x+m} ${i.y} ${p} ${s.x} ${i.y+a} L ${s.x} ${s.y}`),i.x===s.x&&(T=`M ${i.x} ${i.y} L ${s.x} ${s.y}`)):w==="BT"?(i.x<s.x&&(o.type===O.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${i.x} ${s.y+m} ${h} ${i.x+a} ${s.y} L ${s.x} ${s.y}`:T=`M ${i.x} ${i.y} L ${s.x-m} ${i.y} ${p} ${s.x} ${i.y-a} L ${s.x} ${s.y}`),i.x>s.x&&(p="A 20 20, 0, 0, 0,",h="A 20 20, 0, 0, 1,",m=20,a=20,o.type===O.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${i.x} ${s.y+m} ${p} ${i.x-a} ${s.y} L ${s.x} ${s.y}`:T=`M ${i.x} ${i.y} L ${s.x-m} ${i.y} ${p} ${s.x} ${i.y-a} L ${s.x} ${s.y}`),i.x===s.x&&(T=`M ${i.x} ${i.y} L ${s.x} ${s.y}`)):(i.y<s.y&&(o.type===O.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${s.x-m} ${i.y} ${h} ${s.x} ${i.y+a} L ${s.x} ${s.y}`:T=`M ${i.x} ${i.y} L ${i.x} ${s.y-m} ${p} ${i.x+a} ${s.y} L ${s.x} ${s.y}`),i.y>s.y&&(o.type===O.MERGE&&c.id!==o.parents[0]?T=`M ${i.x} ${i.y} L ${s.x-m} ${i.y} ${p} ${s.x} ${i.y-a} L ${s.x} ${s.y}`:T=`M ${i.x} ${i.y} L ${i.x} ${s.y+m} ${h} ${i.x+a} ${s.y} L ${s.x} ${s.y}`),i.y===s.y&&(T=`M ${i.x} ${i.y} L ${s.x} ${s.y}`));r.append("path").attr("d",T).attr("class","arrow arrow"+L%$)},"drawArrow"),kt=f((r,c)=>{let o=r.append("g").attr("class","commit-arrows");[...c.keys()].forEach(u=>{let i=c.get(u);i.parents&&i.parents.length>0&&i.parents.forEach(s=>{xt(o,c.get(s),i,c)})})},"drawArrows"),yt=f((r,c)=>{let o=Y().gitGraph,u=r.append("g");c.forEach((i,s)=>{let b=s%$,p=A.get(i.name).pos,h=u.append("line");h.attr("x1",0),h.attr("y1",p),h.attr("x2",J),h.attr("y2",p),h.attr("class","branch branch"+b),w==="TB"?(h.attr("y1",me),h.attr("x1",p),h.attr("y2",J),h.attr("x2",p)):w==="BT"&&(h.attr("y1",J),h.attr("x1",p),h.attr("y2",me),h.attr("x2",p)),he.push(p);let m=i.name,a=Ye(m),L=u.insert("rect"),l=u.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+b);l.node().appendChild(a);let _=a.getBBox();L.attr("class","branchLabelBkg label"+b).attr("rx",4).attr("ry",4).attr("x",-_.width-4-(o.rotateCommitLabel===!0?30:0)).attr("y",-_.height/2+8).attr("width",_.width+18).attr("height",_.height+4),l.attr("transform","translate("+(-_.width-14-(o.rotateCommitLabel===!0?30:0))+", "+(p-_.height/2-1)+")"),w==="TB"?(L.attr("x",p-_.width/2-10).attr("y",0),l.attr("transform","translate("+(p-_.width/2-5)+", 0)")):w==="BT"?(L.attr("x",p-_.width/2-10).attr("y",J),l.attr("transform","translate("+(p-_.width/2-5)+", "+J+")")):L.attr("transform","translate(-19, "+(p-_.height/2)+")")})},"drawBranches"),_t=f(function(r,c,o,u){gt();let i=Y(),s=i.gitGraph;N.debug("in gitgraph renderer",r+`
`,"id:",c,o),se=u.db.getCommits();let b=u.db.getBranchesAsObjArray();w=u.db.getDirection();let p=Oe(`[id="${c}"]`),h=0;b.forEach((m,a)=>{let L=Ye(m.name),T=p.append("g"),l=T.insert("g").attr("class","branchLabel"),_=l.insert("g").attr("class","label branch-label");_.node().appendChild(L);let y=L.getBBox();A.set(m.name,{pos:h,index:a}),h+=50+(s.rotateCommitLabel?40:0)+(w==="TB"||w==="BT"?y.width/2:0),_.remove(),l.remove(),T.remove()}),qe(p,se,!1),s.showBranches&&yt(p,b),kt(p,se),qe(p,se,!0),Ge.insertTitle(p,"gitTitleText",s.titleTopMargin,u.db.getDiagramTitle()),Pe(void 0,p,s.diagramPadding,s.useMaxWidth??i.useMaxWidth)},"draw"),Ke={draw:_t};var Tt=f(r=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(c=>`
        .branch-label${c} { fill: ${r["gitBranchLabel"+c]}; }
        .commit${c} { stroke: ${r["git"+c]}; fill: ${r["git"+c]}; }
        .commit-highlight${c} { stroke: ${r["gitInv"+c]}; fill: ${r["gitInv"+c]}; }
        .label${c}  { fill: ${r["git"+c]}; }
        .arrow${c} { stroke: ${r["git"+c]}; }
        `).join(`
`)}

  .branch {
    stroke-width: 1;
    stroke: ${r.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelColor};}
  .commit-label-bkg { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${r.tagLabelFontSize}; fill: ${r.tagLabelColor};}
  .tag-label-bkg { fill: ${r.tagLabelBackground}; stroke: ${r.tagLabelBorder}; }
  .tag-hole { fill: ${r.textColor}; }

  .commit-merge {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }
  .commit-reverse {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${r.textColor};
  }
`,"getStyles"),Ue=Tt;var Kt={parser:Ie,db:ze,renderer:Ke,styles:Ue};export{Kt as diagram};
