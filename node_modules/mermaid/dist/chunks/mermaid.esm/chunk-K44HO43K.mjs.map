{
  "version": 3,
  "sources": ["../../../../parser/dist/mermaid-parser.core.mjs"],
  "sourcesContent": ["import {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-RKFCU2KB.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-LJZ6S5TY.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-MD7KGQIB.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  Info,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  __name,\n  isCommon,\n  isInfo,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-DHJNZKBA.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-6DTA2IBU.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-U42HJDVK.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-UXUM55JI.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  isCommon,\n  isInfo,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n"],
  "mappings": ";;;;;;;;AAoCA,IAAI,UAAU,CAAC;AACf,IAAI,eAAe;AAAA,EACjB,MAAsB,gBAAAA,QAAO,YAAY;AACvC,UAAM,EAAE,oBAAoB,oBAAoB,IAAI,MAAM,OAAO,8BAAgD;AACjH,UAAM,SAAS,oBAAoB,EAAE,KAAK,OAAO;AACjD,YAAQ,OAAO;AAAA,EACjB,GAAG,MAAM;AAAA,EACT,QAAwB,gBAAAA,QAAO,YAAY;AACzC,UAAM,EAAE,sBAAsB,sBAAsB,IAAI,MAAM,OAAO,gCAAkD;AACvH,UAAM,SAAS,sBAAsB,EAAE,OAAO,OAAO;AACrD,YAAQ,SAAS;AAAA,EACnB,GAAG,QAAQ;AAAA,EACX,KAAqB,gBAAAA,QAAO,YAAY;AACtC,UAAM,EAAE,mBAAmB,mBAAmB,IAAI,MAAM,OAAO,6BAA+C;AAC9G,UAAM,SAAS,mBAAmB,EAAE,IAAI,OAAO;AAC/C,YAAQ,MAAM;AAAA,EAChB,GAAG,KAAK;AACV;AACA,eAAe,MAAM,aAAa,MAAM;AACtC,QAAM,cAAc,aAAa,WAAW;AAC5C,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,yBAAyB,WAAW,EAAE;AAAA,EACxD;AACA,MAAI,CAAC,QAAQ,WAAW,GAAG;AACzB,UAAM,YAAY;AAAA,EACpB;AACA,QAAM,SAAS,QAAQ,WAAW;AAClC,QAAM,SAAS,OAAO,MAAM,IAAI;AAChC,MAAI,OAAO,YAAY,SAAS,KAAK,OAAO,aAAa,SAAS,GAAG;AACnE,UAAM,IAAI,kBAAkB,MAAM;AAAA,EACpC;AACA,SAAO,OAAO;AAChB;AAde;AAefA,QAAO,OAAO,OAAO;AACrB,IAAI,oBAAoB,cAAc,MAAM;AAAA,EAtE5C,OAsE4C;AAAA;AAAA;AAAA,EAC1C,YAAY,QAAQ;AAClB,UAAM,cAAc,OAAO,YAAY,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE,KAAK,IAAI;AAC1E,UAAM,eAAe,OAAO,aAAa,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE,KAAK,IAAI;AAC5E,UAAM,mBAAmB,WAAW,IAAI,YAAY,EAAE;AACtD,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,OAAO;AACL,IAAAA,QAAO,MAAM,mBAAmB;AAAA,EAClC;AACF;",
  "names": ["__name"]
}
